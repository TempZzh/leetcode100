{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Python mainRun block": {
		"prefix": "__if",
		"body": [
			"",
			"",
			"if __name__ == '__main__':",
			"\tpass",
		],
		"description": "Python mainRun block"
	},
	"Python Template": {
		"prefix": "pytemplate",
		"body": [
			"# Definition for a binary tree node.",
			"class TreeNode:",
			"\tdef __init__(self, val=0, left=None, right=None):",
			"\t\tself.val = val",
			"\t\tself.left = left",
			"\t\tself.right = right",
			"",
			"# Definition for singly-linked list.",
			"class ListNode:",
			"\tdef __init__(self, val=0, next=None):",
			"\t\tself.val = val",
			"\t\tself.next = next",
			"",
			"from typing import Optional",
			"",
			"class Solution:",
			"\tdef func(self, para1: int) -> Optional[int]:",
			"\t\tpass",
			"",
			"if __name__ == '__main__':",
			"\tpass",
			"",
		],
		"description": "Python Template"
	}
}